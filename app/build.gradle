/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // Add Javalin dependencies
    implementation 'io.javalin:javalin:5.6.3'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    implementation 'com.google.zxing:core:3.5.3'      // Core ZXing library
    implementation 'com.google.zxing:javase:3.5.3'    // Java SE specific features (like MatrixToImageWriter)
    
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.0'


    // Add MongoDB dependencies
    implementation 'org.mongodb:mongodb-driver-sync:4.11.0'

    // XChart para las graficas de java
    implementation 'org.knowm.xchart:xchart:3.8.8'

    // Add Auth0 Java JWT dependency
    implementation 'com.auth0:java-jwt:4.4.0' // Or the latest version
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'proyecto_final.App'
    
    // Añade estos parámetros para resolver problemas de SSL
    applicationDefaultJvmArgs = [
        "-Dhttps.protocols=TLSv1.2",
        "-Djdk.tls.client.protocols=TLSv1.2"
    ]
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
